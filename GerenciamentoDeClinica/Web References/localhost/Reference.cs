//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace GerenciamentoDeClinica.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IClinicaService", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Pessoa))]
    public partial class ClinicaService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CadastrarConsultaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtualizarConsultaOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoverConsultaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListarConsultaOperationCompleted;
        
        private System.Threading.SendOrPostCallback CadastrarConvenioOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtualizarConvenioOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoverConvenioOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListarConvenioOperationCompleted;
        
        private System.Threading.SendOrPostCallback CadastrarEspecialidadeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtualizarEspecialidadeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoverEspecialidadeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListarEspecialidadeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CadastrarMedicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtualizarMedicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoverMedicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListarMedicoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CadastrarPacienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtualizarPacienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoverPacienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListarPacienteOperationCompleted;
        
        private System.Threading.SendOrPostCallback CadastrarSecretariaOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtualizarSecretariaOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoverSecretariaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListarSecretariaOperationCompleted;
        
        private System.Threading.SendOrPostCallback CadastrarEstadoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AtualizarEstadoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoverEstadoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListarEstadoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ClinicaService() {
            this.Url = global::GerenciamentoDeClinica.Properties.Settings.Default.GerenciamentoDeClinica_localhost_ClinicaService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CadastrarConsultaCompletedEventHandler CadastrarConsultaCompleted;
        
        /// <remarks/>
        public event AtualizarConsultaCompletedEventHandler AtualizarConsultaCompleted;
        
        /// <remarks/>
        public event RemoverConsultaCompletedEventHandler RemoverConsultaCompleted;
        
        /// <remarks/>
        public event ListarConsultaCompletedEventHandler ListarConsultaCompleted;
        
        /// <remarks/>
        public event CadastrarConvenioCompletedEventHandler CadastrarConvenioCompleted;
        
        /// <remarks/>
        public event AtualizarConvenioCompletedEventHandler AtualizarConvenioCompleted;
        
        /// <remarks/>
        public event RemoverConvenioCompletedEventHandler RemoverConvenioCompleted;
        
        /// <remarks/>
        public event ListarConvenioCompletedEventHandler ListarConvenioCompleted;
        
        /// <remarks/>
        public event CadastrarEspecialidadeCompletedEventHandler CadastrarEspecialidadeCompleted;
        
        /// <remarks/>
        public event AtualizarEspecialidadeCompletedEventHandler AtualizarEspecialidadeCompleted;
        
        /// <remarks/>
        public event RemoverEspecialidadeCompletedEventHandler RemoverEspecialidadeCompleted;
        
        /// <remarks/>
        public event ListarEspecialidadeCompletedEventHandler ListarEspecialidadeCompleted;
        
        /// <remarks/>
        public event CadastrarMedicoCompletedEventHandler CadastrarMedicoCompleted;
        
        /// <remarks/>
        public event AtualizarMedicoCompletedEventHandler AtualizarMedicoCompleted;
        
        /// <remarks/>
        public event RemoverMedicoCompletedEventHandler RemoverMedicoCompleted;
        
        /// <remarks/>
        public event ListarMedicoCompletedEventHandler ListarMedicoCompleted;
        
        /// <remarks/>
        public event CadastrarPacienteCompletedEventHandler CadastrarPacienteCompleted;
        
        /// <remarks/>
        public event AtualizarPacienteCompletedEventHandler AtualizarPacienteCompleted;
        
        /// <remarks/>
        public event RemoverPacienteCompletedEventHandler RemoverPacienteCompleted;
        
        /// <remarks/>
        public event ListarPacienteCompletedEventHandler ListarPacienteCompleted;
        
        /// <remarks/>
        public event CadastrarSecretariaCompletedEventHandler CadastrarSecretariaCompleted;
        
        /// <remarks/>
        public event AtualizarSecretariaCompletedEventHandler AtualizarSecretariaCompleted;
        
        /// <remarks/>
        public event RemoverSecretariaCompletedEventHandler RemoverSecretariaCompleted;
        
        /// <remarks/>
        public event ListarSecretariaCompletedEventHandler ListarSecretariaCompleted;
        
        /// <remarks/>
        public event CadastrarEstadoCompletedEventHandler CadastrarEstadoCompleted;
        
        /// <remarks/>
        public event AtualizarEstadoCompletedEventHandler AtualizarEstadoCompleted;
        
        /// <remarks/>
        public event RemoverEstadoCompletedEventHandler RemoverEstadoCompleted;
        
        /// <remarks/>
        public event ListarEstadoCompletedEventHandler ListarEstadoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/CadastrarConsulta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CadastrarConsulta([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Consulta consulta) {
            this.Invoke("CadastrarConsulta", new object[] {
                        consulta});
        }
        
        /// <remarks/>
        public void CadastrarConsultaAsync(Consulta consulta) {
            this.CadastrarConsultaAsync(consulta, null);
        }
        
        /// <remarks/>
        public void CadastrarConsultaAsync(Consulta consulta, object userState) {
            if ((this.CadastrarConsultaOperationCompleted == null)) {
                this.CadastrarConsultaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCadastrarConsultaOperationCompleted);
            }
            this.InvokeAsync("CadastrarConsulta", new object[] {
                        consulta}, this.CadastrarConsultaOperationCompleted, userState);
        }
        
        private void OnCadastrarConsultaOperationCompleted(object arg) {
            if ((this.CadastrarConsultaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CadastrarConsultaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/AtualizarConsulta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AtualizarConsulta([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Consulta consulta) {
            this.Invoke("AtualizarConsulta", new object[] {
                        consulta});
        }
        
        /// <remarks/>
        public void AtualizarConsultaAsync(Consulta consulta) {
            this.AtualizarConsultaAsync(consulta, null);
        }
        
        /// <remarks/>
        public void AtualizarConsultaAsync(Consulta consulta, object userState) {
            if ((this.AtualizarConsultaOperationCompleted == null)) {
                this.AtualizarConsultaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtualizarConsultaOperationCompleted);
            }
            this.InvokeAsync("AtualizarConsulta", new object[] {
                        consulta}, this.AtualizarConsultaOperationCompleted, userState);
        }
        
        private void OnAtualizarConsultaOperationCompleted(object arg) {
            if ((this.AtualizarConsultaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtualizarConsultaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/RemoverConsulta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoverConsulta([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Consulta consulta) {
            this.Invoke("RemoverConsulta", new object[] {
                        consulta});
        }
        
        /// <remarks/>
        public void RemoverConsultaAsync(Consulta consulta) {
            this.RemoverConsultaAsync(consulta, null);
        }
        
        /// <remarks/>
        public void RemoverConsultaAsync(Consulta consulta, object userState) {
            if ((this.RemoverConsultaOperationCompleted == null)) {
                this.RemoverConsultaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoverConsultaOperationCompleted);
            }
            this.InvokeAsync("RemoverConsulta", new object[] {
                        consulta}, this.RemoverConsultaOperationCompleted, userState);
        }
        
        private void OnRemoverConsultaOperationCompleted(object arg) {
            if ((this.RemoverConsultaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoverConsultaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/ListarConsulta", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.consulta")]
        public Consulta[] ListarConsulta([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Consulta filtro) {
            object[] results = this.Invoke("ListarConsulta", new object[] {
                        filtro});
            return ((Consulta[])(results[0]));
        }
        
        /// <remarks/>
        public void ListarConsultaAsync(Consulta filtro) {
            this.ListarConsultaAsync(filtro, null);
        }
        
        /// <remarks/>
        public void ListarConsultaAsync(Consulta filtro, object userState) {
            if ((this.ListarConsultaOperationCompleted == null)) {
                this.ListarConsultaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListarConsultaOperationCompleted);
            }
            this.InvokeAsync("ListarConsulta", new object[] {
                        filtro}, this.ListarConsultaOperationCompleted, userState);
        }
        
        private void OnListarConsultaOperationCompleted(object arg) {
            if ((this.ListarConsultaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListarConsultaCompleted(this, new ListarConsultaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/CadastrarConvenio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CadastrarConvenio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Convenio convenio) {
            this.Invoke("CadastrarConvenio", new object[] {
                        convenio});
        }
        
        /// <remarks/>
        public void CadastrarConvenioAsync(Convenio convenio) {
            this.CadastrarConvenioAsync(convenio, null);
        }
        
        /// <remarks/>
        public void CadastrarConvenioAsync(Convenio convenio, object userState) {
            if ((this.CadastrarConvenioOperationCompleted == null)) {
                this.CadastrarConvenioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCadastrarConvenioOperationCompleted);
            }
            this.InvokeAsync("CadastrarConvenio", new object[] {
                        convenio}, this.CadastrarConvenioOperationCompleted, userState);
        }
        
        private void OnCadastrarConvenioOperationCompleted(object arg) {
            if ((this.CadastrarConvenioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CadastrarConvenioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/AtualizarConvenio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AtualizarConvenio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Convenio convenio) {
            this.Invoke("AtualizarConvenio", new object[] {
                        convenio});
        }
        
        /// <remarks/>
        public void AtualizarConvenioAsync(Convenio convenio) {
            this.AtualizarConvenioAsync(convenio, null);
        }
        
        /// <remarks/>
        public void AtualizarConvenioAsync(Convenio convenio, object userState) {
            if ((this.AtualizarConvenioOperationCompleted == null)) {
                this.AtualizarConvenioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtualizarConvenioOperationCompleted);
            }
            this.InvokeAsync("AtualizarConvenio", new object[] {
                        convenio}, this.AtualizarConvenioOperationCompleted, userState);
        }
        
        private void OnAtualizarConvenioOperationCompleted(object arg) {
            if ((this.AtualizarConvenioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtualizarConvenioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/RemoverConvenio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoverConvenio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Convenio convenio) {
            this.Invoke("RemoverConvenio", new object[] {
                        convenio});
        }
        
        /// <remarks/>
        public void RemoverConvenioAsync(Convenio convenio) {
            this.RemoverConvenioAsync(convenio, null);
        }
        
        /// <remarks/>
        public void RemoverConvenioAsync(Convenio convenio, object userState) {
            if ((this.RemoverConvenioOperationCompleted == null)) {
                this.RemoverConvenioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoverConvenioOperationCompleted);
            }
            this.InvokeAsync("RemoverConvenio", new object[] {
                        convenio}, this.RemoverConvenioOperationCompleted, userState);
        }
        
        private void OnRemoverConvenioOperationCompleted(object arg) {
            if ((this.RemoverConvenioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoverConvenioCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/ListarConvenio", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.convenio")]
        public Convenio[] ListarConvenio([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Convenio filtro) {
            object[] results = this.Invoke("ListarConvenio", new object[] {
                        filtro});
            return ((Convenio[])(results[0]));
        }
        
        /// <remarks/>
        public void ListarConvenioAsync(Convenio filtro) {
            this.ListarConvenioAsync(filtro, null);
        }
        
        /// <remarks/>
        public void ListarConvenioAsync(Convenio filtro, object userState) {
            if ((this.ListarConvenioOperationCompleted == null)) {
                this.ListarConvenioOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListarConvenioOperationCompleted);
            }
            this.InvokeAsync("ListarConvenio", new object[] {
                        filtro}, this.ListarConvenioOperationCompleted, userState);
        }
        
        private void OnListarConvenioOperationCompleted(object arg) {
            if ((this.ListarConvenioCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListarConvenioCompleted(this, new ListarConvenioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/CadastrarEspecialidade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CadastrarEspecialidade([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Especialidade especialidade) {
            this.Invoke("CadastrarEspecialidade", new object[] {
                        especialidade});
        }
        
        /// <remarks/>
        public void CadastrarEspecialidadeAsync(Especialidade especialidade) {
            this.CadastrarEspecialidadeAsync(especialidade, null);
        }
        
        /// <remarks/>
        public void CadastrarEspecialidadeAsync(Especialidade especialidade, object userState) {
            if ((this.CadastrarEspecialidadeOperationCompleted == null)) {
                this.CadastrarEspecialidadeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCadastrarEspecialidadeOperationCompleted);
            }
            this.InvokeAsync("CadastrarEspecialidade", new object[] {
                        especialidade}, this.CadastrarEspecialidadeOperationCompleted, userState);
        }
        
        private void OnCadastrarEspecialidadeOperationCompleted(object arg) {
            if ((this.CadastrarEspecialidadeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CadastrarEspecialidadeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/AtualizarEspecialidade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AtualizarEspecialidade([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Especialidade especialidade) {
            this.Invoke("AtualizarEspecialidade", new object[] {
                        especialidade});
        }
        
        /// <remarks/>
        public void AtualizarEspecialidadeAsync(Especialidade especialidade) {
            this.AtualizarEspecialidadeAsync(especialidade, null);
        }
        
        /// <remarks/>
        public void AtualizarEspecialidadeAsync(Especialidade especialidade, object userState) {
            if ((this.AtualizarEspecialidadeOperationCompleted == null)) {
                this.AtualizarEspecialidadeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtualizarEspecialidadeOperationCompleted);
            }
            this.InvokeAsync("AtualizarEspecialidade", new object[] {
                        especialidade}, this.AtualizarEspecialidadeOperationCompleted, userState);
        }
        
        private void OnAtualizarEspecialidadeOperationCompleted(object arg) {
            if ((this.AtualizarEspecialidadeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtualizarEspecialidadeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/RemoverEspecialidade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoverEspecialidade([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Especialidade especialidade) {
            this.Invoke("RemoverEspecialidade", new object[] {
                        especialidade});
        }
        
        /// <remarks/>
        public void RemoverEspecialidadeAsync(Especialidade especialidade) {
            this.RemoverEspecialidadeAsync(especialidade, null);
        }
        
        /// <remarks/>
        public void RemoverEspecialidadeAsync(Especialidade especialidade, object userState) {
            if ((this.RemoverEspecialidadeOperationCompleted == null)) {
                this.RemoverEspecialidadeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoverEspecialidadeOperationCompleted);
            }
            this.InvokeAsync("RemoverEspecialidade", new object[] {
                        especialidade}, this.RemoverEspecialidadeOperationCompleted, userState);
        }
        
        private void OnRemoverEspecialidadeOperationCompleted(object arg) {
            if ((this.RemoverEspecialidadeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoverEspecialidadeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/ListarEspecialidade", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.especialidade")]
        public Especialidade[] ListarEspecialidade([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Especialidade filtro) {
            object[] results = this.Invoke("ListarEspecialidade", new object[] {
                        filtro});
            return ((Especialidade[])(results[0]));
        }
        
        /// <remarks/>
        public void ListarEspecialidadeAsync(Especialidade filtro) {
            this.ListarEspecialidadeAsync(filtro, null);
        }
        
        /// <remarks/>
        public void ListarEspecialidadeAsync(Especialidade filtro, object userState) {
            if ((this.ListarEspecialidadeOperationCompleted == null)) {
                this.ListarEspecialidadeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListarEspecialidadeOperationCompleted);
            }
            this.InvokeAsync("ListarEspecialidade", new object[] {
                        filtro}, this.ListarEspecialidadeOperationCompleted, userState);
        }
        
        private void OnListarEspecialidadeOperationCompleted(object arg) {
            if ((this.ListarEspecialidadeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListarEspecialidadeCompleted(this, new ListarEspecialidadeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/CadastrarMedico", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CadastrarMedico([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Medico medico) {
            this.Invoke("CadastrarMedico", new object[] {
                        medico});
        }
        
        /// <remarks/>
        public void CadastrarMedicoAsync(Medico medico) {
            this.CadastrarMedicoAsync(medico, null);
        }
        
        /// <remarks/>
        public void CadastrarMedicoAsync(Medico medico, object userState) {
            if ((this.CadastrarMedicoOperationCompleted == null)) {
                this.CadastrarMedicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCadastrarMedicoOperationCompleted);
            }
            this.InvokeAsync("CadastrarMedico", new object[] {
                        medico}, this.CadastrarMedicoOperationCompleted, userState);
        }
        
        private void OnCadastrarMedicoOperationCompleted(object arg) {
            if ((this.CadastrarMedicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CadastrarMedicoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/AtualizarMedico", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AtualizarMedico([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Medico medico) {
            this.Invoke("AtualizarMedico", new object[] {
                        medico});
        }
        
        /// <remarks/>
        public void AtualizarMedicoAsync(Medico medico) {
            this.AtualizarMedicoAsync(medico, null);
        }
        
        /// <remarks/>
        public void AtualizarMedicoAsync(Medico medico, object userState) {
            if ((this.AtualizarMedicoOperationCompleted == null)) {
                this.AtualizarMedicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtualizarMedicoOperationCompleted);
            }
            this.InvokeAsync("AtualizarMedico", new object[] {
                        medico}, this.AtualizarMedicoOperationCompleted, userState);
        }
        
        private void OnAtualizarMedicoOperationCompleted(object arg) {
            if ((this.AtualizarMedicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtualizarMedicoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/RemoverMedico", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoverMedico([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Medico medico) {
            this.Invoke("RemoverMedico", new object[] {
                        medico});
        }
        
        /// <remarks/>
        public void RemoverMedicoAsync(Medico medico) {
            this.RemoverMedicoAsync(medico, null);
        }
        
        /// <remarks/>
        public void RemoverMedicoAsync(Medico medico, object userState) {
            if ((this.RemoverMedicoOperationCompleted == null)) {
                this.RemoverMedicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoverMedicoOperationCompleted);
            }
            this.InvokeAsync("RemoverMedico", new object[] {
                        medico}, this.RemoverMedicoOperationCompleted, userState);
        }
        
        private void OnRemoverMedicoOperationCompleted(object arg) {
            if ((this.RemoverMedicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoverMedicoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/ListarMedico", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.medico")]
        public Medico[] ListarMedico([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Medico filtro) {
            object[] results = this.Invoke("ListarMedico", new object[] {
                        filtro});
            return ((Medico[])(results[0]));
        }
        
        /// <remarks/>
        public void ListarMedicoAsync(Medico filtro) {
            this.ListarMedicoAsync(filtro, null);
        }
        
        /// <remarks/>
        public void ListarMedicoAsync(Medico filtro, object userState) {
            if ((this.ListarMedicoOperationCompleted == null)) {
                this.ListarMedicoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListarMedicoOperationCompleted);
            }
            this.InvokeAsync("ListarMedico", new object[] {
                        filtro}, this.ListarMedicoOperationCompleted, userState);
        }
        
        private void OnListarMedicoOperationCompleted(object arg) {
            if ((this.ListarMedicoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListarMedicoCompleted(this, new ListarMedicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/CadastrarPaciente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CadastrarPaciente([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Paciente paciente) {
            this.Invoke("CadastrarPaciente", new object[] {
                        paciente});
        }
        
        /// <remarks/>
        public void CadastrarPacienteAsync(Paciente paciente) {
            this.CadastrarPacienteAsync(paciente, null);
        }
        
        /// <remarks/>
        public void CadastrarPacienteAsync(Paciente paciente, object userState) {
            if ((this.CadastrarPacienteOperationCompleted == null)) {
                this.CadastrarPacienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCadastrarPacienteOperationCompleted);
            }
            this.InvokeAsync("CadastrarPaciente", new object[] {
                        paciente}, this.CadastrarPacienteOperationCompleted, userState);
        }
        
        private void OnCadastrarPacienteOperationCompleted(object arg) {
            if ((this.CadastrarPacienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CadastrarPacienteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/AtualizarPaciente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AtualizarPaciente([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Paciente paciente) {
            this.Invoke("AtualizarPaciente", new object[] {
                        paciente});
        }
        
        /// <remarks/>
        public void AtualizarPacienteAsync(Paciente paciente) {
            this.AtualizarPacienteAsync(paciente, null);
        }
        
        /// <remarks/>
        public void AtualizarPacienteAsync(Paciente paciente, object userState) {
            if ((this.AtualizarPacienteOperationCompleted == null)) {
                this.AtualizarPacienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtualizarPacienteOperationCompleted);
            }
            this.InvokeAsync("AtualizarPaciente", new object[] {
                        paciente}, this.AtualizarPacienteOperationCompleted, userState);
        }
        
        private void OnAtualizarPacienteOperationCompleted(object arg) {
            if ((this.AtualizarPacienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtualizarPacienteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/RemoverPaciente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoverPaciente([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Paciente paciente) {
            this.Invoke("RemoverPaciente", new object[] {
                        paciente});
        }
        
        /// <remarks/>
        public void RemoverPacienteAsync(Paciente paciente) {
            this.RemoverPacienteAsync(paciente, null);
        }
        
        /// <remarks/>
        public void RemoverPacienteAsync(Paciente paciente, object userState) {
            if ((this.RemoverPacienteOperationCompleted == null)) {
                this.RemoverPacienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoverPacienteOperationCompleted);
            }
            this.InvokeAsync("RemoverPaciente", new object[] {
                        paciente}, this.RemoverPacienteOperationCompleted, userState);
        }
        
        private void OnRemoverPacienteOperationCompleted(object arg) {
            if ((this.RemoverPacienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoverPacienteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/ListarPaciente", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.paciente")]
        public Paciente[] ListarPaciente([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Paciente filtro) {
            object[] results = this.Invoke("ListarPaciente", new object[] {
                        filtro});
            return ((Paciente[])(results[0]));
        }
        
        /// <remarks/>
        public void ListarPacienteAsync(Paciente filtro) {
            this.ListarPacienteAsync(filtro, null);
        }
        
        /// <remarks/>
        public void ListarPacienteAsync(Paciente filtro, object userState) {
            if ((this.ListarPacienteOperationCompleted == null)) {
                this.ListarPacienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListarPacienteOperationCompleted);
            }
            this.InvokeAsync("ListarPaciente", new object[] {
                        filtro}, this.ListarPacienteOperationCompleted, userState);
        }
        
        private void OnListarPacienteOperationCompleted(object arg) {
            if ((this.ListarPacienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListarPacienteCompleted(this, new ListarPacienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/CadastrarSecretaria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CadastrarSecretaria([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Secretaria secretaria) {
            this.Invoke("CadastrarSecretaria", new object[] {
                        secretaria});
        }
        
        /// <remarks/>
        public void CadastrarSecretariaAsync(Secretaria secretaria) {
            this.CadastrarSecretariaAsync(secretaria, null);
        }
        
        /// <remarks/>
        public void CadastrarSecretariaAsync(Secretaria secretaria, object userState) {
            if ((this.CadastrarSecretariaOperationCompleted == null)) {
                this.CadastrarSecretariaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCadastrarSecretariaOperationCompleted);
            }
            this.InvokeAsync("CadastrarSecretaria", new object[] {
                        secretaria}, this.CadastrarSecretariaOperationCompleted, userState);
        }
        
        private void OnCadastrarSecretariaOperationCompleted(object arg) {
            if ((this.CadastrarSecretariaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CadastrarSecretariaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/AtualizarSecretaria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AtualizarSecretaria([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Secretaria secretaria) {
            this.Invoke("AtualizarSecretaria", new object[] {
                        secretaria});
        }
        
        /// <remarks/>
        public void AtualizarSecretariaAsync(Secretaria secretaria) {
            this.AtualizarSecretariaAsync(secretaria, null);
        }
        
        /// <remarks/>
        public void AtualizarSecretariaAsync(Secretaria secretaria, object userState) {
            if ((this.AtualizarSecretariaOperationCompleted == null)) {
                this.AtualizarSecretariaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtualizarSecretariaOperationCompleted);
            }
            this.InvokeAsync("AtualizarSecretaria", new object[] {
                        secretaria}, this.AtualizarSecretariaOperationCompleted, userState);
        }
        
        private void OnAtualizarSecretariaOperationCompleted(object arg) {
            if ((this.AtualizarSecretariaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtualizarSecretariaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/RemoverSecretaria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoverSecretaria([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Secretaria secretaria) {
            this.Invoke("RemoverSecretaria", new object[] {
                        secretaria});
        }
        
        /// <remarks/>
        public void RemoverSecretariaAsync(Secretaria secretaria) {
            this.RemoverSecretariaAsync(secretaria, null);
        }
        
        /// <remarks/>
        public void RemoverSecretariaAsync(Secretaria secretaria, object userState) {
            if ((this.RemoverSecretariaOperationCompleted == null)) {
                this.RemoverSecretariaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoverSecretariaOperationCompleted);
            }
            this.InvokeAsync("RemoverSecretaria", new object[] {
                        secretaria}, this.RemoverSecretariaOperationCompleted, userState);
        }
        
        private void OnRemoverSecretariaOperationCompleted(object arg) {
            if ((this.RemoverSecretariaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoverSecretariaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/ListarSecretaria", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.secretaria")]
        public Secretaria[] ListarSecretaria([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Secretaria filtro) {
            object[] results = this.Invoke("ListarSecretaria", new object[] {
                        filtro});
            return ((Secretaria[])(results[0]));
        }
        
        /// <remarks/>
        public void ListarSecretariaAsync(Secretaria filtro) {
            this.ListarSecretariaAsync(filtro, null);
        }
        
        /// <remarks/>
        public void ListarSecretariaAsync(Secretaria filtro, object userState) {
            if ((this.ListarSecretariaOperationCompleted == null)) {
                this.ListarSecretariaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListarSecretariaOperationCompleted);
            }
            this.InvokeAsync("ListarSecretaria", new object[] {
                        filtro}, this.ListarSecretariaOperationCompleted, userState);
        }
        
        private void OnListarSecretariaOperationCompleted(object arg) {
            if ((this.ListarSecretariaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListarSecretariaCompleted(this, new ListarSecretariaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/CadastrarEstado", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CadastrarEstado([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Estado estado) {
            this.Invoke("CadastrarEstado", new object[] {
                        estado});
        }
        
        /// <remarks/>
        public void CadastrarEstadoAsync(Estado estado) {
            this.CadastrarEstadoAsync(estado, null);
        }
        
        /// <remarks/>
        public void CadastrarEstadoAsync(Estado estado, object userState) {
            if ((this.CadastrarEstadoOperationCompleted == null)) {
                this.CadastrarEstadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCadastrarEstadoOperationCompleted);
            }
            this.InvokeAsync("CadastrarEstado", new object[] {
                        estado}, this.CadastrarEstadoOperationCompleted, userState);
        }
        
        private void OnCadastrarEstadoOperationCompleted(object arg) {
            if ((this.CadastrarEstadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CadastrarEstadoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/AtualizarEstado", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AtualizarEstado([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Estado estado) {
            this.Invoke("AtualizarEstado", new object[] {
                        estado});
        }
        
        /// <remarks/>
        public void AtualizarEstadoAsync(Estado estado) {
            this.AtualizarEstadoAsync(estado, null);
        }
        
        /// <remarks/>
        public void AtualizarEstadoAsync(Estado estado, object userState) {
            if ((this.AtualizarEstadoOperationCompleted == null)) {
                this.AtualizarEstadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAtualizarEstadoOperationCompleted);
            }
            this.InvokeAsync("AtualizarEstado", new object[] {
                        estado}, this.AtualizarEstadoOperationCompleted, userState);
        }
        
        private void OnAtualizarEstadoOperationCompleted(object arg) {
            if ((this.AtualizarEstadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AtualizarEstadoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/RemoverEstado", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoverEstado([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Estado estado) {
            this.Invoke("RemoverEstado", new object[] {
                        estado});
        }
        
        /// <remarks/>
        public void RemoverEstadoAsync(Estado estado) {
            this.RemoverEstadoAsync(estado, null);
        }
        
        /// <remarks/>
        public void RemoverEstadoAsync(Estado estado, object userState) {
            if ((this.RemoverEstadoOperationCompleted == null)) {
                this.RemoverEstadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoverEstadoOperationCompleted);
            }
            this.InvokeAsync("RemoverEstado", new object[] {
                        estado}, this.RemoverEstadoOperationCompleted, userState);
        }
        
        private void OnRemoverEstadoOperationCompleted(object arg) {
            if ((this.RemoverEstadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoverEstadoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IClinicaService/ListarEstado", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.estado")]
        public Estado[] ListarEstado([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Estado filtro) {
            object[] results = this.Invoke("ListarEstado", new object[] {
                        filtro});
            return ((Estado[])(results[0]));
        }
        
        /// <remarks/>
        public void ListarEstadoAsync(Estado filtro) {
            this.ListarEstadoAsync(filtro, null);
        }
        
        /// <remarks/>
        public void ListarEstadoAsync(Estado filtro, object userState) {
            if ((this.ListarEstadoOperationCompleted == null)) {
                this.ListarEstadoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListarEstadoOperationCompleted);
            }
            this.InvokeAsync("ListarEstado", new object[] {
                        filtro}, this.ListarEstadoOperationCompleted, userState);
        }
        
        private void OnListarEstadoOperationCompleted(object arg) {
            if ((this.ListarEstadoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListarEstadoCompleted(this, new ListarEstadoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.consulta")]
    public partial class Consulta {
        
        private int duracaoField;
        
        private Estado estadoField;
        
        private System.DateTime horarioField;
        
        private int iD_ConsultaField;
        
        private Medico medicoField;
        
        private string observacoesField;
        
        private Paciente pacienteField;
        
        private string receitaField;
        
        private Secretaria secretariaField;
        
        /// <remarks/>
        public int Duracao {
            get {
                return this.duracaoField;
            }
            set {
                this.duracaoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Estado Estado {
            get {
                return this.estadoField;
            }
            set {
                this.estadoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Horario {
            get {
                return this.horarioField;
            }
            set {
                this.horarioField = value;
            }
        }
        
        /// <remarks/>
        public int ID_Consulta {
            get {
                return this.iD_ConsultaField;
            }
            set {
                this.iD_ConsultaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Medico Medico {
            get {
                return this.medicoField;
            }
            set {
                this.medicoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Observacoes {
            get {
                return this.observacoesField;
            }
            set {
                this.observacoesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Paciente Paciente {
            get {
                return this.pacienteField;
            }
            set {
                this.pacienteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Receita {
            get {
                return this.receitaField;
            }
            set {
                this.receitaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Secretaria Secretaria {
            get {
                return this.secretariaField;
            }
            set {
                this.secretariaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.estado")]
    public partial class Estado {
        
        private string descricaoField;
        
        private int iD_EstadoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
        
        /// <remarks/>
        public int ID_Estado {
            get {
                return this.iD_EstadoField;
            }
            set {
                this.iD_EstadoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.convenio")]
    public partial class Convenio {
        
        private string descricaoField;
        
        private int iD_ConvenioField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
        
        /// <remarks/>
        public int ID_Convenio {
            get {
                return this.iD_ConvenioField;
            }
            set {
                this.iD_ConvenioField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.especialidade")]
    public partial class Especialidade {
        
        private string descricaoField;
        
        private int iD_EspecialidadeField;
        
        private bool iD_EspecialidadeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Descricao {
            get {
                return this.descricaoField;
            }
            set {
                this.descricaoField = value;
            }
        }
        
        /// <remarks/>
        public int ID_Especialidade {
            get {
                return this.iD_EspecialidadeField;
            }
            set {
                this.iD_EspecialidadeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ID_EspecialidadeSpecified {
            get {
                return this.iD_EspecialidadeFieldSpecified;
            }
            set {
                this.iD_EspecialidadeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.classesbasicas")]
    public partial class Endereco {
        
        private string bairroField;
        
        private string cEPField;
        
        private string cidadeField;
        
        private string complementoField;
        
        private string logradouroField;
        
        private string numeroField;
        
        private string paisField;
        
        private string ufField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Bairro {
            get {
                return this.bairroField;
            }
            set {
                this.bairroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CEP {
            get {
                return this.cEPField;
            }
            set {
                this.cEPField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cidade {
            get {
                return this.cidadeField;
            }
            set {
                this.cidadeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Complemento {
            get {
                return this.complementoField;
            }
            set {
                this.complementoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Logradouro {
            get {
                return this.logradouroField;
            }
            set {
                this.logradouroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Numero {
            get {
                return this.numeroField;
            }
            set {
                this.numeroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Pais {
            get {
                return this.paisField;
            }
            set {
                this.paisField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UF {
            get {
                return this.ufField;
            }
            set {
                this.ufField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Paciente))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Secretaria))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Medico))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.classesbasicas")]
    public partial class Pessoa {
        
        private string cPFField;
        
        private string contatoField;
        
        private System.DateTime dt_NascimentoField;
        
        private string emailField;
        
        private Endereco enderecoField;
        
        private string estado_CivilField;
        
        private string nomeField;
        
        private string rgField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CPF {
            get {
                return this.cPFField;
            }
            set {
                this.cPFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Contato {
            get {
                return this.contatoField;
            }
            set {
                this.contatoField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Dt_Nascimento {
            get {
                return this.dt_NascimentoField;
            }
            set {
                this.dt_NascimentoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Endereco Endereco {
            get {
                return this.enderecoField;
            }
            set {
                this.enderecoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Estado_Civil {
            get {
                return this.estado_CivilField;
            }
            set {
                this.estado_CivilField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RG {
            get {
                return this.rgField;
            }
            set {
                this.rgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.paciente")]
    public partial class Paciente : Pessoa {
        
        private Convenio convenioField;
        
        private int iD_PacienteField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Convenio Convenio {
            get {
                return this.convenioField;
            }
            set {
                this.convenioField = value;
            }
        }
        
        /// <remarks/>
        public int ID_Paciente {
            get {
                return this.iD_PacienteField;
            }
            set {
                this.iD_PacienteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.secretaria")]
    public partial class Secretaria : Pessoa {
        
        private int iD_SecretariaField;
        
        /// <remarks/>
        public int ID_Secretaria {
            get {
                return this.iD_SecretariaField;
            }
            set {
                this.iD_SecretariaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ClinicaServiceLibrary.medico")]
    public partial class Medico : Pessoa {
        
        private string cRMField;
        
        private Especialidade especialidadeField;
        
        private int iD_MedicoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CRM {
            get {
                return this.cRMField;
            }
            set {
                this.cRMField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Especialidade Especialidade {
            get {
                return this.especialidadeField;
            }
            set {
                this.especialidadeField = value;
            }
        }
        
        /// <remarks/>
        public int ID_Medico {
            get {
                return this.iD_MedicoField;
            }
            set {
                this.iD_MedicoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CadastrarConsultaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AtualizarConsultaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoverConsultaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListarConsultaCompletedEventHandler(object sender, ListarConsultaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListarConsultaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListarConsultaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Consulta[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Consulta[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CadastrarConvenioCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AtualizarConvenioCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoverConvenioCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListarConvenioCompletedEventHandler(object sender, ListarConvenioCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListarConvenioCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListarConvenioCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Convenio[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Convenio[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CadastrarEspecialidadeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AtualizarEspecialidadeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoverEspecialidadeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListarEspecialidadeCompletedEventHandler(object sender, ListarEspecialidadeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListarEspecialidadeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListarEspecialidadeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Especialidade[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Especialidade[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CadastrarMedicoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AtualizarMedicoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoverMedicoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListarMedicoCompletedEventHandler(object sender, ListarMedicoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListarMedicoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListarMedicoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Medico[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Medico[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CadastrarPacienteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AtualizarPacienteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoverPacienteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListarPacienteCompletedEventHandler(object sender, ListarPacienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListarPacienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListarPacienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Paciente[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Paciente[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CadastrarSecretariaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AtualizarSecretariaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoverSecretariaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListarSecretariaCompletedEventHandler(object sender, ListarSecretariaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListarSecretariaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListarSecretariaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Secretaria[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Secretaria[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CadastrarEstadoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AtualizarEstadoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void RemoverEstadoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListarEstadoCompletedEventHandler(object sender, ListarEstadoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListarEstadoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListarEstadoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Estado[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Estado[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591