<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>