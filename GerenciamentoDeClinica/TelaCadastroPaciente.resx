<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>